name: Owasp Zap (DAST) Scan

on:
  workflow_call:  # Permite que outros workflows chamem este
  workflow_dispatch:
jobs:
  dast-scan:
    name: OWASP ZAP DAST Scan
    runs-on: ubuntu-latest

    steps:
      # Checkout do código (caso necessário)
      - name: Checkout Code
        uses: actions/checkout@v3

      # Configurar a aplicação alvo (caso seja local)
      - name: Start Target Application
        run: |
          docker compose up -d
          sleep 30 # Tempo para garantir que o serviço esteja rodando

      # Executar o OWASP ZAP Scan
      - name: OWASP ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.12.0 #zapbot/zap-action@v0.4.0
        with:
          target: "http://localhost:5001/ui" # Alterar para a URL da sua aplicação
          rules_file_name: zap-rules.txt  # Opcional: arquivo de regras personalizadas
          docker_name: owasp/zap2docker-stable
          cmd_options: "-config api.addrs.addr.name=.* -config api.addrs.addr.regex=true"
      
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://localhost:5001/ui'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

      # Exibir o relatório de vulnerabilidades
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: /zap/wrk/output.html
